


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Mehmet Uzgoren
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000         
   26 00000000                 EXPORT           writecommand
   27 00000000                 EXPORT           writedata
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000         
   33 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   34 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   35 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   36 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   37 00000000         ; lot of data, the FIFOs are not used when writing
   38 00000000         ; commands, and they are used when writing data.  This
   39 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   40 00000000         ; that is actually being transmitted.
   41 00000000         ; The write command operation waits until all data has b
                       een
   42 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds



ARM Macro Assembler    Page 2 


   43 00000000         ; the command, and then waits for the transmission to
   44 00000000         ; finish.
   45 00000000         ; The write data operation waits until there is room in 
                       the
   46 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   47 00000000         ; and then adds the data to the transmit FIFO.
   48 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   49 00000000         ; the SSI0 module is not initialized and enabled.
   50 00000000         
   51 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   52 00000000         ; Input: R0  8-bit command to transmit
   53 00000000         ; Output: none
   54 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   55 00000000         
   56 00000000         writecommand
   57 00000000 4910            LDR              R1, =SSI0_SR_R
   58 00000002 6809            LDR              R1, [R1]
   59 00000004 F001 0110       AND              R1, #0x10
   60 00000008 2900            CMP              R1, #0
   61 0000000A D1FE            BNE              writecommand
   62 0000000C         
   63 0000000C 490E            LDR              R1, =GPIO_PORTA_DATA_R
   64 0000000E 680A            LDR              R2, [R1]
   65 00000010 F002 02BF       AND              R2, #0xBF
   66 00000014 700A            STRB             R2, [R1]
   67 00000016         
   68 00000016 490D            LDR              R1, =SSI0_DR_R
   69 00000018 7008            STRB             R0, [R1]
   70 0000001A         
   71 0000001A 490A            LDR              R1, =SSI0_SR_R
   72 0000001C         
   73 0000001C         step5loop
   74 0000001C 680A            LDR              R2, [R1]
   75 0000001E F002 0210       AND              R2, R2, #0x10
   76 00000022 2A00            CMP              R2, #0
   77 00000024 D1FA            BNE              step5loop
   78 00000026         
   79 00000026 4770            BX               LR          ;   return
   80 00000028         
   81 00000028         ;This is a helper function that sends an 8-bit data to t
                       he LCD.
   82 00000028         ;Input: R0  8-bit data to transmit
   83 00000028         ;Assumes: SSI0 and port A have already been initialized 
                       and enabled
   84 00000028         writedata
   85 00000028 4906            LDR              R1, =SSI0_SR_R
   86 0000002A 6809            LDR              R1, [R1]
   87 0000002C F001 0102       AND              R1, #0x02
   88 00000030 2900            CMP              R1, #0
   89 00000032 D0FE            BEQ              writedata
   90 00000034         
   91 00000034 4904            LDR              R1, =GPIO_PORTA_DATA_R
   92 00000036 680A            LDR              R2, [R1]
   93 00000038 F042 0240       ORR              R2, #0x40
   94 0000003C 700A            STRB             R2, [R1]



ARM Macro Assembler    Page 3 


   95 0000003E         
   96 0000003E 4903            LDR              R1, =SSI0_DR_R
   97 00000040 7008            STRB             R0, [R1]
   98 00000042         
   99 00000042 4770            BX               LR          ;   return
  100 00000044         
  101 00000044         
  102 00000044         
  103 00000044         
  104 00000044         
  105 00000044         ;***************************************************
  106 00000044         ; This is a library for the Adafruit 1.8" SPI display.
  107 00000044         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  108 00000044         ; ----> http://www.adafruit.com/products/358
  109 00000044         ; as well as Adafruit raw 1.8" TFT display
  110 00000044         ; ----> http://www.adafruit.com/products/618
  111 00000044         ;
  112 00000044         ; Check out the links above for our tutorials and wiring
                        diagrams
  113 00000044         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  114 00000044         ; interface (RST is optional)
  115 00000044         ; Adafruit invests time and resources providing this ope
                       n source code,
  116 00000044         ; please support Adafruit and open-source hardware by pu
                       rchasing
  117 00000044         ; products from Adafruit!
  118 00000044         ;
  119 00000044         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  120 00000044         ; MIT license, all text above must be included in any re
                       distribution
  121 00000044         ;****************************************************
  122 00000044         
  123 00000044                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  124 00000044                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_SpaceInvaders -IC:\Users\mehme\AppData\
Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\mehme\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --pred
efine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: .text unused
step5loop 0000001C

Symbol: step5loop
   Definitions
      At line 73 in file LCD.s
   Uses
      At line 77 in file LCD.s
Comment: step5loop used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 56 in file LCD.s
   Uses
      At line 26 in file LCD.s
      At line 61 in file LCD.s

writedata 00000028

Symbol: writedata
   Definitions
      At line 84 in file LCD.s
   Uses
      At line 27 in file LCD.s
      At line 89 in file LCD.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 63 in file LCD.s
      At line 91 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 96 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 57 in file LCD.s
      At line 71 in file LCD.s
      At line 85 in file LCD.s

3 symbols
343 symbols in table
