


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Mehmet Uzgoren
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000         
   13 00000000                 PRESERVE8
   14 00000000        B 
                       FP      RN               11
   15 00000000 00000000 
                       COUNT   EQU              0
   16 00000000 00000004 
                       NUM     EQU              4
   17 00000000         
   18 00000000                 IMPORT           ST7735_OutChar
   19 00000000                 IMPORT           ST7735_OutString
   20 00000000                 EXPORT           LCD_OutDec
   21 00000000                 EXPORT           LCD_OutFix
   22 00000000         
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000         
   26 00000000         
   27 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   28 00000000         ; Output a 32-bit number in unsigned decimal format
   29 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   30 00000000         ; Output: none
   31 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   32 00000000         ; R0=0,    then output "0"
   33 00000000         ; R0=3,    then output "3"
   34 00000000         ; R0=89,   then output "89"
   35 00000000         ; R0=123,  then output "123"
   36 00000000         ; R0=9999, then output "9999"
   37 00000000         ; R0=4294967295, then output "4294967295"
   38 00000000         
   39 00000000         
   40 00000000         
   41 00000000         
   42 00000000         
   43 00000000         LCD_OutDec
   44 00000000 E92D 4BF0       PUSH             {R4-R9, R11, LR}
   45 00000004 B082            SUB              SP, #8
   46 00000006 2800            CMP              R0, #0
   47 00000008 D02B            BEQ              Zero
   48 0000000A         
   49 0000000A 46EB            MOV              FP, SP
   50 0000000C F8CB 0004       STR              R0, [FP, #NUM]



ARM Macro Assembler    Page 2 


   51 00000010 F04F 0400       MOV              R4, #0
   52 00000014 F8CB 4000       STR              R4, [FP, #COUNT]
   53 00000018 F04F 050A       MOV              R5, #10
   54 0000001C         
   55 0000001C         loop
   56 0000001C F8DB 4004       LDR              R4, [FP, #NUM]
   57 00000020 2C00            CMP              R4, #0
   58 00000022 D010            BEQ              Next
   59 00000024 FBB4 F6F5       UDIV             R6, R4, R5
   60 00000028 FB05 F706       MUL              R7, R5, R6
   61 0000002C EBA4 0807       SUB              R8, R4, R7
   62 00000030 F84D 8D04       PUSH             {R8}
   63 00000034 F8CB 6004       STR              R6, [FP, #NUM]
   64 00000038 F8DB 6000       LDR              R6, [FP, #COUNT]
   65 0000003C F106 0601       ADD              R6, #1
   66 00000040 F8CB 6000       STR              R6, [FP, #COUNT]
   67 00000044 E7EA            B                loop
   68 00000046         
   69 00000046         Next
   70 00000046 F8DB 4000       LDR              R4, [FP, #COUNT]
   71 0000004A 2C00            CMP              R4, #0
   72 0000004C D00D            BEQ              Done
   73 0000004E BC01            POP              {R0}
   74 00000050 F100 0030       ADD              R0, #0x30
   75 00000054 F7FF FFFE       BL               ST7735_OutChar
   76 00000058 F1A4 0401       SUB              R4, #1
   77 0000005C F8CB 4000       STR              R4, [FP, #COUNT]
   78 00000060 E7F1            B                Next
   79 00000062         
   80 00000062         Zero
   81 00000062 F04F 0030       MOV              R0, #0x30
   82 00000066 F7FF FFFE       BL               ST7735_OutChar
   83 0000006A         
   84 0000006A         Done
   85 0000006A B002            ADD              SP, #8
   86 0000006C E8BD 4BF0       POP              {R4-R9, R11, LR}
   87 00000070 4770            BX               LR
   88 00000072         
   89 00000072         
   90 00000072         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   91 00000072         
   92 00000072         ; -----------------------LCD _OutFix--------------------
                       --
   93 00000072         ; Output characters to LCD display in fixed-point format
                       
   94 00000072         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   95 00000072         ; Inputs:  R0 is an unsigned 32-bit number
   96 00000072         ; Outputs: none
   97 00000072         ; E.g., R0=0,    then output "0.000"
   98 00000072         ;       R0=3,    then output "0.003"
   99 00000072         ;       R0=89,   then output "0.089"
  100 00000072         ;       R0=123,  then output "0.123"
  101 00000072         ;       R0=9999, then output "9.999"
  102 00000072         ;       R0>9999, then output "*.***"
  103 00000072         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  104 00000072         
  105 00000072         



ARM Macro Assembler    Page 3 


  106 00000072         
  107 00000072         
  108 00000072         LCD_OutFix
  109 00000072 E92D 4BF0       PUSH{R4-R9,      R11, LR}
  110 00000076         
  111 00000076 B082            SUB              SP, #8      ;Allocation
  112 00000078         
  113 00000078 2800            CMP              R0, #0
  114 0000007A D061            BEQ              EdgeZero
  115 0000007C         
  116 0000007C F242 710F       MOV              R1, #9999
  117 00000080 4288            CMP              R0, R1
  118 00000082 D848            BHI              EdgeHigher
  119 00000084         
  120 00000084 46EB            MOV              FP, SP      ;New pointer for co
                                                            unt and num values 
                                                            on stack
  121 00000086 F04F 0100       MOV              R1, #0
  122 0000008A F8CB 1000       STR              R1, [FP, #COUNT] ;Count starts 
                                                            with 0
  123 0000008E F8CB 0004       STR              R0, [FP, #NUM] 
                                                            ;Num gets input R0
  124 00000092 F04F 020A       MOV              R2, #10     ;Initialize R5 with
                                                             10 for modulus 
  125 00000096         
  126 00000096         PushIntegers
  127 00000096 F8DB 1004       LDR              R1, [FP, #NUM] ;R4 gets num
  128 0000009A 2900            CMP              R1, #0
  129 0000009C D00F            BEQ              AddZeros    ;Loop finished when
                                                             there are no more 
                                                            digits
  130 0000009E FBB1 F3F2       UDIV             R3, R1, R2  ;R6 gets quotient
  131 000000A2 FB03 F402       MUL              R4, R3, R2  ;Quotient *10
  132 000000A6 EBA1 0504       SUB              R5, R1, R4  ; Remainder = Numbe
                                                            r - Quotient*10
  133 000000AA B420            PUSH             {R5}        ;Remainder (digit) 
                                                            gets pushed onto st
                                                            ack
  134 000000AC F8CB 3004       STR              R3, [FP, #NUM] ;Quotient gets s
                                                            tored into num
  135 000000B0 F8DB 3000       LDR              R3, [FP, #COUNT]
  136 000000B4 F103 0301       ADD              R3, #1
  137 000000B8 F8CB 3000       STR              R3, [FP, #COUNT] 
                                                            ;Count is increased
                                                            
  138 000000BC E7EB            B                PushIntegers
  139 000000BE         
  140 000000BE         AddZeros
  141 000000BE F04F 0604       MOV              R6, #4
  142 000000C2 F8DB 7000       LDR              R7, [FP, #COUNT] ;R2 gets amoun
                                                            t of digits
  143 000000C6 F04F 0800       MOV              R8, #0      ; Flag
  144 000000CA 1BF6            SUBS             R6, R7      ;Finds the amount o
                                                            f zeros needed
  145 000000CC         
  146 000000CC         CheckZeros
  147 000000CC 2E00            CMP              R6, #0      ;Checks to see if t
                                                            here are anymore 0s
                                                             needed



ARM Macro Assembler    Page 4 


  148 000000CE D00E            BEQ              PopIntegers
  149 000000D0 F04F 0030       MOV              R0, #0x30
  150 000000D4 F7FF FFFE       BL               ST7735_OutChar
  151 000000D8 F1B8 0F00       CMP              R8, #0      ;If the program is 
                                                            on the first 0, it'
                                                            ll also print out a
                                                             decimal point
  152 000000DC D103            BNE              SkipDecimal
  153 000000DE F04F 002E       MOV              R0, #0x2E
  154 000000E2 F7FF FFFE       BL               ST7735_OutChar
  155 000000E6         
  156 000000E6         SkipDecimal
  157 000000E6 3E01            SUBS             R6, #1
  158 000000E8 F04F 0801       MOV              R8, #1      ;Makes sure no more
                                                             decimal points are
                                                             printed
  159 000000EC E7EE            B                CheckZeros
  160 000000EE         
  161 000000EE         PopIntegers
  162 000000EE F8DB 6000       LDR              R6, [FP, #COUNT] ;R4 gets count
                                                            
  163 000000F2 2E00            CMP              R6, #0      ;Checks to see ther
                                                            e are digits on the
                                                             stack
  164 000000F4 D038            BEQ              OutFixDone
  165 000000F6 BC01            POP              {R0}        ;Pushes R0, which h
                                                            as the digit at the
                                                             top of the stack
  166 000000F8 F100 0030       ADD              R0, #0x30   ;Converts to ascii 
                                                            value
  167 000000FC F7FF FFFE       BL               ST7735_OutChar
  168 00000100 2E04            CMP              R6, #4
  169 00000102 D103            BNE              SkipDecimal2
  170 00000104 F04F 002E       MOV              R0, #0x2E
  171 00000108 F7FF FFFE       BL               ST7735_OutChar ;If there are 4 
                                                            digits, print a dec
                                                            imal point right af
                                                            ter the first digit
                                                            
  172 0000010C         
  173 0000010C         SkipDecimal2
  174 0000010C F1A6 0601       SUB              R6, #1      ;Count decrements
  175 00000110 F8CB 6000       STR              R6, [FP, #COUNT]
  176 00000114 E7EB            B                PopIntegers
  177 00000116         
  178 00000116         
  179 00000116         ;Prints the zeros needed and the decimal point if the nu
                       mber of digits is < 4
  180 00000116         ;Input: None
  181 00000116         ;Output: None
  182 00000116         
  183 00000116         
  184 00000116         
  185 00000116         
  186 00000116         ;Edge case if R0 > 9999
  187 00000116         ;Inputs: None
  188 00000116         ;Outputs: None
  189 00000116         EdgeHigher
  190 00000116         



ARM Macro Assembler    Page 5 


  191 00000116 F04F 002A       MOV              R0, #0x2A
  192 0000011A F7FF FFFE       BL               ST7735_OutChar
  193 0000011E F04F 002E       MOV              R0, #0x2E
  194 00000122 F7FF FFFE       BL               ST7735_OutChar
  195 00000126 F04F 002A       MOV              R0, #0x2A
  196 0000012A F7FF FFFE       BL               ST7735_OutChar
  197 0000012E F04F 002A       MOV              R0, #0x2A
  198 00000132 F7FF FFFE       BL               ST7735_OutChar
  199 00000136 F04F 002A       MOV              R0, #0x2A
  200 0000013A F7FF FFFE       BL               ST7735_OutChar
  201 0000013E E013            B                OutFixDone
  202 00000140         
  203 00000140         ;Edge case if R0=0
  204 00000140         ;Inputs: None
  205 00000140         ;Outputs: None
  206 00000140         EdgeZero
  207 00000140 F04F 0030       MOV              R0, #0x30
  208 00000144 F7FF FFFE       BL               ST7735_OutChar
  209 00000148 F04F 002E       MOV              R0, #0x2E
  210 0000014C F7FF FFFE       BL               ST7735_OutChar
  211 00000150 F04F 0030       MOV              R0, #0x30
  212 00000154 F7FF FFFE       BL               ST7735_OutChar
  213 00000158 F04F 0030       MOV              R0, #0x30
  214 0000015C F7FF FFFE       BL               ST7735_OutChar
  215 00000160 F04F 0030       MOV              R0, #0x30
  216 00000164 F7FF FFFE       BL               ST7735_OutChar
  217 00000168         
  218 00000168         OutFixDone
  219 00000168 B002            ADD              SP, #8      ;Re-allocation
  220 0000016A E8BD 4BF0       POP              {R4-R9, R11, LR}
  221 0000016E 4770            BX               LR
  222 00000170         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  223 00000170         
  224 00000170                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  225 00000170                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\mehme\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\mehme\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst P
rint.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file Print.s
   Uses
      None
Comment: .text unused
AddZeros 000000BE

Symbol: AddZeros
   Definitions
      At line 140 in file Print.s
   Uses
      At line 129 in file Print.s
Comment: AddZeros used once
CheckZeros 000000CC

Symbol: CheckZeros
   Definitions
      At line 146 in file Print.s
   Uses
      At line 159 in file Print.s
Comment: CheckZeros used once
Done 0000006A

Symbol: Done
   Definitions
      At line 84 in file Print.s
   Uses
      At line 72 in file Print.s
Comment: Done used once
EdgeHigher 00000116

Symbol: EdgeHigher
   Definitions
      At line 189 in file Print.s
   Uses
      At line 118 in file Print.s
Comment: EdgeHigher used once
EdgeZero 00000140

Symbol: EdgeZero
   Definitions
      At line 206 in file Print.s
   Uses
      At line 114 in file Print.s
Comment: EdgeZero used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 43 in file Print.s
   Uses
      At line 20 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000072

Symbol: LCD_OutFix



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 108 in file Print.s
   Uses
      At line 21 in file Print.s
Comment: LCD_OutFix used once
Next 00000046

Symbol: Next
   Definitions
      At line 69 in file Print.s
   Uses
      At line 58 in file Print.s
      At line 78 in file Print.s

OutFixDone 00000168

Symbol: OutFixDone
   Definitions
      At line 218 in file Print.s
   Uses
      At line 164 in file Print.s
      At line 201 in file Print.s

PopIntegers 000000EE

Symbol: PopIntegers
   Definitions
      At line 161 in file Print.s
   Uses
      At line 148 in file Print.s
      At line 176 in file Print.s

PushIntegers 00000096

Symbol: PushIntegers
   Definitions
      At line 126 in file Print.s
   Uses
      At line 138 in file Print.s
Comment: PushIntegers used once
SkipDecimal 000000E6

Symbol: SkipDecimal
   Definitions
      At line 156 in file Print.s
   Uses
      At line 152 in file Print.s
Comment: SkipDecimal used once
SkipDecimal2 0000010C

Symbol: SkipDecimal2
   Definitions
      At line 173 in file Print.s
   Uses
      At line 169 in file Print.s
Comment: SkipDecimal2 used once
Zero 00000062

Symbol: Zero



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 80 in file Print.s
   Uses
      At line 47 in file Print.s
Comment: Zero used once
loop 0000001C

Symbol: loop
   Definitions
      At line 55 in file Print.s
   Uses
      At line 67 in file Print.s
Comment: loop used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COUNT 00000000

Symbol: COUNT
   Definitions
      At line 15 in file Print.s
   Uses
      At line 52 in file Print.s
      At line 64 in file Print.s
      At line 66 in file Print.s
      At line 70 in file Print.s
      At line 77 in file Print.s
      At line 122 in file Print.s
      At line 135 in file Print.s
      At line 137 in file Print.s
      At line 142 in file Print.s
      At line 162 in file Print.s
      At line 175 in file Print.s

NUM 00000004

Symbol: NUM
   Definitions
      At line 16 in file Print.s
   Uses
      At line 50 in file Print.s
      At line 56 in file Print.s
      At line 63 in file Print.s
      At line 123 in file Print.s
      At line 127 in file Print.s
      At line 134 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 18 in file Print.s
   Uses
      At line 75 in file Print.s
      At line 82 in file Print.s
      At line 150 in file Print.s
      At line 154 in file Print.s
      At line 167 in file Print.s
      At line 171 in file Print.s
      At line 192 in file Print.s
      At line 194 in file Print.s
      At line 196 in file Print.s
      At line 198 in file Print.s
      At line 200 in file Print.s
      At line 208 in file Print.s
      At line 210 in file Print.s
      At line 212 in file Print.s
      At line 214 in file Print.s
      At line 216 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 19 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
354 symbols in table
